<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Eclipse | Wush筆記]]></title>
  <link href="http://wush978.github.com/blog/categories/eclipse/atom.xml" rel="self"/>
  <link href="http://wush978.github.com/"/>
  <updated>2013-04-04T23:42:47+08:00</updated>
  <id>http://wush978.github.com/</id>
  <author>
    <name><![CDATA[Wush978]]></name>
    <email><![CDATA[wush.978@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Eclipse CDT to develop Rcpp Package]]></title>
    <link href="http://wush978.github.com/blog/2013/01/29/using-eclipse-cdt-to-develop-rcpp-package/"/>
    <updated>2013-01-29T15:16:00+08:00</updated>
    <id>http://wush978.github.com/blog/2013/01/29/using-eclipse-cdt-to-develop-rcpp-package</id>
    <content type="html"><![CDATA[<p>Rstudio is great, but it lacks some useful features for C/C++ provided
by modern IDE such as tracing. Eclipse CDT is a good choice, but it is
complicated to setup the project correctly.</p>

<p>I just wrote a cmake script to generate Eclipse CDT project for
developing Rcpp package.</p>

<h1>Environment</h1>

<ul>
<li>CMake >= 2.8.7</li>
<li>Eclipse >= 3.7</li>
<li>Eclipse CDT >= 1.4.2</li>
<li>R >= 2.15</li>
<li>Rcpp >= 0.10</li>
</ul>


<h1>Configuration</h1>

<ul>
<li><p>Download FindLibR.cmake from <a href="https://github.com/rstudio/rstudio/blob/master/cmake/modules/FindLibR.cmake">github</a>
provided by Rstudio</p></li>
<li><p>Generate Rcpp package, for example</p></li>
</ul>


<p><code>r
library(Rcpp)
Rcpp.package.skeleton("RcppPackage")
</code></p>

<ul>
<li>Put the following file, named <em>CMakeLists.txt</em> in the generated folder
such as <code>RcppPackage</code> in the previous example</li>
</ul>


<p>```cmake CMakeLists.txt
cmake_minimum_required(VERSION 2.8)
project(RcppPackage)
find_package(LibR)
if(${LIBR_FOUND})
else()</p>

<pre><code>message(FATAL_ERROR "No R...")
</code></pre>

<p>endif()
message(STATUS ${CMAKE_SOURCE_DIR})
execute_process(</p>

<pre><code>COMMAND ${LIBR_EXECUTABLE} "--slave" "-e" "stopifnot(require('Rcpp'));cat(Rcpp:::Rcpp.system.file('include'))"
OUTPUT_VARIABLE LIBRCPP_INCLUDE_DIRS
) 
</code></pre>

<p>include_directories(BEFORE ${LIBR_INCLUDE_DIRS})
message(STATUS ${LIBR_INCLUDE_DIRS})
include_directories(BEFORE ${LIBRCPP_INCLUDE_DIRS})
message(STATUS ${LIBRCPP_INCLUDE_DIRS})
add_custom_target(RcppPackage ALL</p>

<pre><code>COMMAND find ${CMAKE_SOURCE_DIR} -name "*.o" -exec rm "{}" "\;"
COMMAND find ${CMAKE_SOURCE_DIR} -name "*.so" -exec rm "{}" "\;"
COMMAND ${LIBR_EXECUTABLE} "--slave" "-e" "\"stopifnot(require(roxygen2));roxygenize('${CMAKE_SOURCE_DIR}',roclets=c('rd','collate','namespace'))\""
COMMAND ${LIBR_EXECUTABLE} CMD INSTALL "${CMAKE_SOURCE_DIR}")
</code></pre>

<p>```</p>

<ul>
<li><p>Customize CMakeLists.txt such <code>roxygenize</code> and <code>R CMD INSTALL</code></p></li>
<li><p>Generate project with cmake</p></li>
</ul>


<p><code>sh
mkdir build # don't create subdirectory of RcppPackage
cd build
cmake -G "Eclipse CDT4 - Unix Makefiles" &lt;path to RcppPackage&gt; -DCMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT=TRUE
</code></p>

<ul>
<li><p>Open eclipse and import project from <code>build</code>(See <a href="http://www.vtk.org/Wiki/Eclipse_CDT4_Generator">cmake-eclipse-cdt</a> for example).
After indexing, enjoy several convenient features provided by Eclipse CDT
such as tracing and autocomplete.</p></li>
<li><p>You can build the project which will be converted to <code>R CMD INSTALL</code> or
anything in the <em>CMakeLists.txt</em>.</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
